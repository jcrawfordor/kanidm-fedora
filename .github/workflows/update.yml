name: Release
on:
  workflow_dispatch:
  schedule:
    - cron: "14 4 * * *"

jobs:
  check_release:
    runs-on: ubuntu-latest
    outputs:
      new_release: ${{ steps.set_output.outputs.new_release }}
    steps:
      - uses: actions/checkout@v4
      - id: getrelease
        name: Get latest release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: kanidm
          repo: kanidm
          token: ${{ secrets.GITHUB_TOKEN }}
          excludes: prerelease, draft
      - id: set_output
        name: Set Output
        run: |
          NEW_VERSION="${{ steps.getrelease.outputs.release }}"
          NEW_VERSION="${NEW_VERSION:1}"
          sed -i "s/Version:.*\$/Version: ${NEW_VERSION}/" kanidm.spec
          head -n 30 kanidm.spec
          if [[ $(git diff kanidm.spec) ]]; then
            echo "new release available"
            echo "new_release=true" >> $GITHUB_OUTPUT
          else
            echo "no new release available"
            echo "new_release=false" >> $GITHUB_OUTPUT
          fi

  build_release:
    needs: [check_release]
    if: needs.check_release.outputs.new_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: getrelease
        name: Get latest release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: kanidm
          repo: kanidm
          token: ${{ secrets.GITHUB_TOKEN }}
          excludes: prerelease, draft
      - id: set_output
        name: Set Output
        run: |
          NEW_VERSION="${{ steps.getrelease.outputs.release }}"
          NEW_VERSION="${NEW_VERSION:1}"
          sed -i "s/Version:.*\$/Version: ${NEW_VERSION}/" kanidm.spec
          head -n 30 kanidm.spec
      - name: Commit new spec file
        run: |
          git config --local user.email "github-actions-bot@users.noreply.github.com"
          git config --local user.name "github-actions-bot"
          git commit -a -m "Update specfile version"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Trigger COPR build
        run: |
          JSON_PAYLOAD=$(
          cat << EOF
          {
          "clone_url": "https://github.com/jcrawfordor/kanidm-fedora.git",
          "committish": "main",
          "spec": "kanidm.spec",
          "background": true,
          "enable_net": true,
          "ownername": "jbcrawford",
          "projectname": "kanidm",
          "scm_type": "git",
          "source_build_method": "rpkg"
          }
          EOF
          )
          curl --header "Content-Type: application/json" \
            --user "${{ secrets.COPR_LOGIN }}:${{ secrets.COPR_TOKEN }}" \
            --request POST \
            --data "$JSON_PAYLOAD" \
            https://copr.fedorainfracloud.org/api_3/build/create/scm

